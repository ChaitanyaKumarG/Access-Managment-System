{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const EditUsers = () => {\n//   const [users, setUsers] = useState([]);\n//   const [editUserId, setEditUserId] = useState(null); // For tracking which user is being edited\n//   const [updatedName, setUpdatedName] = useState(\"\"); // For the new name\n//   const [updatedRole, setUpdatedRole] = useState(\"\"); // For the new role\n\n//   // Fetch users from backend\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:2323/users\")\n//       .then((res) => setUsers(res.data))\n//       .catch((err) => console.log(err));\n//   }, []);\n\n//   // Function to start editing\n//   const startEdit = (user) => {\n//     setEditUserId(user.id);\n//     setUpdatedName(user.name);\n//     setUpdatedRole(user.role);\n//   };\n\n//   // Cancel edit mode\n//   const cancelEdit = () => {\n//     setEditUserId(null);\n//     setUpdatedName(\"\");\n//     setUpdatedRole(\"\");\n//   };\n\n//   // Update the user in the backend\n//   const saveUser = (id) => {\n//     axios\n//       .put(`http://localhost:2323/users/${id}`, {\n//         name: updatedName,\n//         role: updatedRole,\n//       })\n//       .then(() => {\n//         setUsers(\n//           users.map((user) =>\n//             user.id === id\n//               ? { ...user, name: updatedName, role: updatedRole }\n//               : user\n//           )\n//         );\n//         cancelEdit(); // Exit edit mode\n//       })\n//       .catch((err) => console.log(err));\n//   };\n\n//   return (\n//     <div>\n//       <h1>User List</h1>\n//       {users ? (\n//         <div>\n//           {users.map((user) => (\n//             <div className=\"border-dark border m-1 container\" key={user.id}>\n//               {editUserId === user.id ? (\n//                 <>\n//                   <input\n//                     type=\"text\"\n//                     value={updatedName}\n//                     onChange={(e) => setUpdatedName(e.target.value)}\n//                     placeholder=\"New Name\"\n//                   />\n//                   <input\n//                     type=\"text\"\n//                     value={updatedRole}\n//                     onChange={(e) => setUpdatedRole(e.target.value)}\n//                     placeholder=\"New Role\"\n//                   />\n//                   <button onClick={() => saveUser(user.id)}>Save</button>\n//                   <button onClick={cancelEdit}>Cancel</button>\n//                 </>\n//               ) : (\n//                 <>\n//                   <p>\n//                     {user.name} - {user.role}\n//                   </p>\n//                   <button onClick={() => startEdit(user)}>Edit</button>\n//                 </>\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//       ) : (\n//         <></>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EditUsers;","map":{"version":3,"names":[],"sources":["D:/reactJS/taskShiftWave/fe/src/Components/EditUsers.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const EditUsers = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [editUserId, setEditUserId] = useState(null); // For tracking which user is being edited\r\n//   const [updatedName, setUpdatedName] = useState(\"\"); // For the new name\r\n//   const [updatedRole, setUpdatedRole] = useState(\"\"); // For the new role\r\n\r\n//   // Fetch users from backend\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"http://localhost:2323/users\")\r\n//       .then((res) => setUsers(res.data))\r\n//       .catch((err) => console.log(err));\r\n//   }, []);\r\n\r\n//   // Function to start editing\r\n//   const startEdit = (user) => {\r\n//     setEditUserId(user.id);\r\n//     setUpdatedName(user.name);\r\n//     setUpdatedRole(user.role);\r\n//   };\r\n\r\n//   // Cancel edit mode\r\n//   const cancelEdit = () => {\r\n//     setEditUserId(null);\r\n//     setUpdatedName(\"\");\r\n//     setUpdatedRole(\"\");\r\n//   };\r\n\r\n//   // Update the user in the backend\r\n//   const saveUser = (id) => {\r\n//     axios\r\n//       .put(`http://localhost:2323/users/${id}`, {\r\n//         name: updatedName,\r\n//         role: updatedRole,\r\n//       })\r\n//       .then(() => {\r\n//         setUsers(\r\n//           users.map((user) =>\r\n//             user.id === id\r\n//               ? { ...user, name: updatedName, role: updatedRole }\r\n//               : user\r\n//           )\r\n//         );\r\n//         cancelEdit(); // Exit edit mode\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>User List</h1>\r\n//       {users ? (\r\n//         <div>\r\n//           {users.map((user) => (\r\n//             <div className=\"border-dark border m-1 container\" key={user.id}>\r\n//               {editUserId === user.id ? (\r\n//                 <>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={updatedName}\r\n//                     onChange={(e) => setUpdatedName(e.target.value)}\r\n//                     placeholder=\"New Name\"\r\n//                   />\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={updatedRole}\r\n//                     onChange={(e) => setUpdatedRole(e.target.value)}\r\n//                     placeholder=\"New Role\"\r\n//                   />\r\n//                   <button onClick={() => saveUser(user.id)}>Save</button>\r\n//                   <button onClick={cancelEdit}>Cancel</button>\r\n//                 </>\r\n//               ) : (\r\n//                 <>\r\n//                   <p>\r\n//                     {user.name} - {user.role}\r\n//                   </p>\r\n//                   <button onClick={() => startEdit(user)}>Edit</button>\r\n//                 </>\r\n//               )}\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       ) : (\r\n//         <></>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditUsers;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}