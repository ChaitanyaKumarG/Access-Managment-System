{"ast":null,"code":"\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const UDashboard = () => {\n//   const [user, setUser] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     mobile: \"\",\n//     email: \"\",\n//     address: \"\",\n//     gender: \"\",\n//     dob: \"\",\n//   });\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   const userId = sessionStorage.getItem(\"currentUserId\");\n\n//   // Check userId and handle missing session storage\n//   useEffect(() => {\n//     if (!userId) {\n//       console.error(\"User ID not found in sessionStorage\");\n//       setError(\"You are not logged in. Redirecting...\");\n//       setTimeout(() => (window.location.href = \"/log\"), 2000);\n//       return;\n//     }\n//   }, [userId]);\n\n//   const fetchUserProfile = async () => {\n//     console.log(\"Fetching user profile for ID:\", userId);\n\n//     if (!userId) {\n//       console.error(\"No user ID found. Skipping fetch.\");\n//       return;\n//     }\n\n//     try {\n//       setLoading(true);\n//       const response = await axios.get(`http://localhost:2323/users/${userId}`);\n//       console.log(\"User profile fetched successfully:\", response.data);\n\n//       setUser(response.data);\n//       setFormData({\n//         name: response.data.name,\n//         mobile: response.data.mobile,\n//         email: response.data.email,\n//         address: response.data.address || \"\",\n//         gender: response.data.gender,\n//         dob: response.data.dob.split(\"T\")[0],\n//       });\n//       setError(null);\n//     } catch (err) {\n//       console.error(\"Error fetching user profile:\", err.message);\n//       setError(\"Failed to fetch user profile. Please try again later.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchUserProfile();\n//   }, []);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\n\n//   return (\n//     <div className=\"container\">\n//       <h1>User Dashboard</h1>\n\n//       {isEditing ? (\n//         <form>{/* Form for editing */}</form>\n//       ) : (\n//         <div>\n//           <h2>Profile</h2>\n//           <p>\n//             <strong>Name:</strong> {user?.name || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Mobile:</strong> {user?.mobile || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Email:</strong> {user?.email || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Address:</strong> {user?.address || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Gender:</strong> {user?.gender || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Date of Birth:</strong>{\" \"}\n//             {user?.dob ? new Date(user.dob).toLocaleDateString() : \"N/A\"}\n//           </p>\n//           <button\n//             onClick={() => setIsEditing(true)}\n//             className=\"btn btn-primary\"\n//           >\n//             Edit Profile\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UDashboard;","map":{"version":3,"names":[],"sources":["D:/reactJS/taskShiftWave/fe/src/Pages/UDashoard.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const UDashboard = () => {\r\n//   const [user, setUser] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     mobile: \"\",\r\n//     email: \"\",\r\n//     address: \"\",\r\n//     gender: \"\",\r\n//     dob: \"\",\r\n//   });\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   const userId = sessionStorage.getItem(\"currentUserId\");\r\n\r\n//   // Check userId and handle missing session storage\r\n//   useEffect(() => {\r\n//     if (!userId) {\r\n//       console.error(\"User ID not found in sessionStorage\");\r\n//       setError(\"You are not logged in. Redirecting...\");\r\n//       setTimeout(() => (window.location.href = \"/log\"), 2000);\r\n//       return;\r\n//     }\r\n//   }, [userId]);\r\n\r\n//   const fetchUserProfile = async () => {\r\n//     console.log(\"Fetching user profile for ID:\", userId);\r\n\r\n//     if (!userId) {\r\n//       console.error(\"No user ID found. Skipping fetch.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await axios.get(`http://localhost:2323/users/${userId}`);\r\n//       console.log(\"User profile fetched successfully:\", response.data);\r\n\r\n//       setUser(response.data);\r\n//       setFormData({\r\n//         name: response.data.name,\r\n//         mobile: response.data.mobile,\r\n//         email: response.data.email,\r\n//         address: response.data.address || \"\",\r\n//         gender: response.data.gender,\r\n//         dob: response.data.dob.split(\"T\")[0],\r\n//       });\r\n//       setError(null);\r\n//     } catch (err) {\r\n//       console.error(\"Error fetching user profile:\", err.message);\r\n//       setError(\"Failed to fetch user profile. Please try again later.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUserProfile();\r\n//   }, []);\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>User Dashboard</h1>\r\n\r\n//       {isEditing ? (\r\n//         <form>{/* Form for editing */}</form>\r\n//       ) : (\r\n//         <div>\r\n//           <h2>Profile</h2>\r\n//           <p>\r\n//             <strong>Name:</strong> {user?.name || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Mobile:</strong> {user?.mobile || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Email:</strong> {user?.email || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Address:</strong> {user?.address || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Gender:</strong> {user?.gender || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Date of Birth:</strong>{\" \"}\r\n//             {user?.dob ? new Date(user.dob).toLocaleDateString() : \"N/A\"}\r\n//           </p>\r\n//           <button\r\n//             onClick={() => setIsEditing(true)}\r\n//             className=\"btn btn-primary\"\r\n//           >\r\n//             Edit Profile\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UDashboard;\r\n"],"mappings":";;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}