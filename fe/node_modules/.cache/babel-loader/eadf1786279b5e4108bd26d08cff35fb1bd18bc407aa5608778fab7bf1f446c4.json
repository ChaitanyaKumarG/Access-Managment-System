{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\taskShiftWave\\\\fe\\\\src\\\\Pages\\\\UDashoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UDashboard = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    mobile: \"\",\n    email: \"\",\n    address: \"\",\n    gender: \"\",\n    dob: \"\"\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const userId = sessionStorage.getItem(\"currentUserId\");\n\n  // Check userId and handle missing session storage\n  useEffect(() => {\n    if (!userId) {\n      console.error(\"User ID not found in sessionStorage\");\n      setError(\"You are not logged in. Redirecting...\");\n      setTimeout(() => window.location.href = \"/login\", 2000);\n      return;\n    }\n  }, [userId]);\n  const fetchUserProfile = async () => {\n    console.log(\"Fetching user profile for ID:\", userId);\n    if (!userId) {\n      console.error(\"No user ID found. Skipping fetch.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:2323/users/${userId}`);\n      console.log(\"User profile fetched successfully:\", response.data);\n      setUser(response.data);\n      setFormData({\n        name: response.data.name,\n        mobile: response.data.mobile,\n        email: response.data.email,\n        address: response.data.address || \"\",\n        gender: response.data.gender,\n        dob: response.data.dob.split(\"T\")[0]\n      });\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching user profile:\", err.message);\n      setError(\"Failed to fetch user profile. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchUserProfile();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), \" \", (user === null || user === void 0 ? void 0 : user.name) || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Mobile:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), \" \", (user === null || user === void 0 ? void 0 : user.mobile) || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), \" \", (user === null || user === void 0 ? void 0 : user.email) || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), \" \", (user === null || user === void 0 ? void 0 : user.address) || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Gender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), \" \", (user === null || user === void 0 ? void 0 : user.gender) || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date of Birth:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), \" \", user !== null && user !== void 0 && user.dob ? new Date(user.dob).toLocaleDateString() : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        className: \"btn btn-primary\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(UDashboard, \"BDEZZn67rkyyqVXom4nZq5by83c=\");\n_c = UDashboard;\nexport default UDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const UDashboard = () => {\n//   const [user, setUser] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     mobile: \"\",\n//     email: \"\",\n//     address: \"\",\n//     gender: \"\",\n//     dob: \"\",\n//   });\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   // Retrieve user ID from sessionStorage\n//   const userId = sessionStorage.getItem(\"currentUserId\");\n\n//   // Redirect if no user ID is found in sessionStorage\n//   useEffect(() => {\n//     if (!userId) {\n//       setError(\"User not logged in. Redirecting...\");\n//       setTimeout(() => (window.location.href = \"/login\"), 2000);\n//     }\n//   }, [userId]);\n\n//   // Fetch the logged-in user's profile\n//   const fetchUserProfile = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await axios.get(`http://localhost:2323/users/${userId}`);\n//       setUser(response.data);\n//       setFormData({\n//         name: response.data.name,\n//         mobile: response.data.mobile,\n//         email: response.data.email,\n//         address: response.data.address || \"\",\n//         gender: response.data.gender,\n//         dob: response.data.dob.split(\"T\")[0],\n//       });\n//       setError(null);\n//     } catch (err) {\n//       setError(\"Failed to fetch user profile. Please try again later.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (userId) fetchUserProfile();\n//   }, [userId]);\n\n//   // Handle form input changes\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   // Submit updated profile\n//   const handleUpdate = async (e) => {\n//     e.preventDefault();\n//     if (\n//       !formData.name ||\n//       !formData.mobile ||\n//       !formData.email ||\n//       !formData.gender ||\n//       !formData.dob\n//     ) {\n//       setError(\"Please fill all required fields\");\n//       return;\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:2323/users/${userId}`, formData);\n//       setIsEditing(false);\n//       fetchUserProfile(); // Refresh data\n//       setError(null);\n//     } catch (err) {\n//       setError(\"Failed to update profile. Please try again.\");\n//     }\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\n\n//   return (\n//     <div className=\"container\">\n//       <h1>User Dashboard</h1>\n\n//       {isEditing ? (\n//         <form onSubmit={handleUpdate}>{/* Form fields */}</form>\n//       ) : (\n//         <div>\n//           <h2>Profile</h2>\n//           <p>\n//             <strong>Name:</strong> {user?.name || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Mobile:</strong> {user?.mobile || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Email:</strong> {user?.email || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Address:</strong> {user?.address || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Gender:</strong> {user?.gender || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Date of Birth:</strong>{\" \"}\n//             {user?.dob ? new Date(user.dob).toLocaleDateString() : \"N/A\"}\n//           </p>\n//           <button\n//             onClick={() => setIsEditing(true)}\n//             className=\"btn btn-primary\"\n//           >\n//             Edit Profile\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const UDashboard = () => {\n//   const [user, setUser] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     mobile: \"\",\n//     email: \"\",\n//     address: \"\",\n//     gender: \"\",\n//     dob: \"\",\n//   });\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   // Get the logged-in user's ID from sessionStorage\n//   const userId = sessionStorage.getItem(\"currentUserId\");\n\n//   // Fetch the logged-in user's profile\n//   const fetchUserProfile = () => {\n//     setLoading(true);\n//     axios\n//       .get(`http://localhost:2323/users/${userId}`)\n//       .then((res) => {\n//         setUser(res.data);\n//         setFormData({\n//           name: res.data.name,\n//           mobile: res.data.mobile,\n//           email: res.data.email,\n//           address: res.data.address || \"\",\n//           gender: res.data.gender,\n//           dob: res.data.dob.split(\"T\")[0], // Format date\n//         });\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   };\n\n//   useEffect(() => {\n//     fetchUserProfile();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   // Submit updated profile\n//   const handleUpdate = (e) => {\n//     e.preventDefault();\n//     if (\n//       !formData.name ||\n//       !formData.mobile ||\n//       !formData.email ||\n//       !formData.gender ||\n//       !formData.dob\n//     ) {\n//       setError(\"Please fill all required fields\");\n//       return;\n//     }\n\n//     axios\n//       .put(`http://localhost:2323/users/${userId}`, formData)\n//       .then(() => {\n//         setIsEditing(false);\n//         fetchUserProfile();\n//         setError(null);\n//       })\n//       .catch((err) => setError(err.message));\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\n\n//   return (\n//     <div className=\"container\">\n//       <h1>User Dashboard</h1>\n\n//       {isEditing ? (\n//         <form onSubmit={handleUpdate}>{/* Form fields */}</form>\n//       ) : (\n//         <div>{/* Display Profile */}</div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const UDashboard = () => {\n//   const [user, setUser] = useState(null); // User details\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     mobile: \"\",\n//     email: \"\",\n//     address: \"\",\n//     gender: \"\",\n//     dob: \"\",\n//   }); // For form inputs\n//   const [isEditing, setIsEditing] = useState(false); // Toggle editing state\n//   const [error, setError] = useState(null); // Error messages\n//   const [loading, setLoading] = useState(true); // Loading state\n\n//   const userId = \"CURRENT_USER_ID\"; // Replace with the logged-in user's ID, fetched from authentication/session\n\n//   // Fetch the logged-in user's profile\n//   const fetchUserProfile = () => {\n//     setLoading(true);\n//     axios\n//       .get(`http://localhost:2323/users/${userId}`)\n//       .then((res) => {\n//         setUser(res.data);\n//         setFormData({\n//           name: res.data.name,\n//           mobile: res.data.mobile,\n//           email: res.data.email,\n//           address: res.data.address || \"\",\n//           gender: res.data.gender,\n//           dob: res.data.dob.split(\"T\")[0], // Format date\n//         });\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   };\n\n//   useEffect(() => {\n//     fetchUserProfile();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   // Submit updated profile\n//   const handleUpdate = (e) => {\n//     e.preventDefault();\n\n//     // Validation\n//     if (\n//       !formData.name ||\n//       !formData.mobile ||\n//       !formData.email ||\n//       !formData.gender ||\n//       !formData.dob\n//     ) {\n//       setError(\"Please fill all required fields\");\n//       return;\n//     }\n\n//     axios\n//       .put(`http://localhost:2323/users/${userId}`, formData)\n//       .then(() => {\n//         setIsEditing(false);\n//         fetchUserProfile(); // Refresh data\n//         setError(null);\n//       })\n//       .catch((err) => setError(err.message));\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\n\n//   return (\n//     <div className=\"container\">\n//       <h1>User Dashboard</h1>\n\n//       {isEditing ? (\n//         // Edit Form\n//         <form onSubmit={handleUpdate}>\n//           <div className=\"mb-3\">\n//             <label>Name</label>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={formData.name}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//               required\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label>Mobile</label>\n//             <input\n//               type=\"tel\"\n//               name=\"mobile\"\n//               value={formData.mobile}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//               required\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label>Email</label>\n//             <input\n//               type=\"email\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//               required\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label>Address</label>\n//             <textarea\n//               name=\"address\"\n//               value={formData.address}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//             ></textarea>\n//           </div>\n//           <div className=\"mb-3\">\n//             <label>Gender</label>\n//             <select\n//               name=\"gender\"\n//               value={formData.gender}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//               required\n//             >\n//               <option value=\"\">Select Gender</option>\n//               <option value=\"Male\">Male</option>\n//               <option value=\"Female\">Female</option>\n//               <option value=\"Other\">Other</option>\n//             </select>\n//           </div>\n//           <div className=\"mb-3\">\n//             <label>Date of Birth</label>\n//             <input\n//               type=\"date\"\n//               name=\"dob\"\n//               value={formData.dob}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary me-2\">\n//             Save\n//           </button>\n//           <button\n//             type=\"button\"\n//             onClick={() => setIsEditing(false)}\n//             className=\"btn btn-secondary\"\n//           >\n//             Cancel\n//           </button>\n//         </form>\n//       ) : (\n//         // Profile Display\n//         <div>\n//           <h2>Profile</h2>\n//           <p>\n//             <strong>Name:</strong> {user.name}\n//           </p>\n//           <p>\n//             <strong>Mobile:</strong> {user.mobile}\n//           </p>\n//           <p>\n//             <strong>Email:</strong> {user.email}\n//           </p>\n//           <p>\n//             <strong>Address:</strong> {user.address || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Gender:</strong> {user.gender}\n//           </p>\n//           <p>\n//             <strong>Date of Birth:</strong>{\" \"}\n//             {new Date(user.dob).toLocaleDateString()}\n//           </p>\n//           <button\n//             onClick={() => setIsEditing(true)}\n//             className=\"btn btn-primary\"\n//           >\n//             Edit Profile\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UDashboard;\nvar _c;\n$RefreshReg$(_c, \"UDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UDashboard","_s","user","setUser","formData","setFormData","name","mobile","email","address","gender","dob","isEditing","setIsEditing","error","setError","loading","setLoading","userId","sessionStorage","getItem","console","setTimeout","window","location","href","fetchUserProfile","log","response","get","data","split","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Date","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["D:/reactJS/taskShiftWave/fe/src/Pages/UDashoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UDashboard = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    gender: \"\",\r\n    dob: \"\",\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const userId = sessionStorage.getItem(\"currentUserId\");\r\n\r\n  // Check userId and handle missing session storage\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      console.error(\"User ID not found in sessionStorage\");\r\n      setError(\"You are not logged in. Redirecting...\");\r\n      setTimeout(() => (window.location.href = \"/login\"), 2000);\r\n      return;\r\n    }\r\n  }, [userId]);\r\n\r\n  const fetchUserProfile = async () => {\r\n    console.log(\"Fetching user profile for ID:\", userId);\r\n\r\n    if (!userId) {\r\n      console.error(\"No user ID found. Skipping fetch.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`http://localhost:2323/users/${userId}`);\r\n      console.log(\"User profile fetched successfully:\", response.data);\r\n\r\n      setUser(response.data);\r\n      setFormData({\r\n        name: response.data.name,\r\n        mobile: response.data.mobile,\r\n        email: response.data.email,\r\n        address: response.data.address || \"\",\r\n        gender: response.data.gender,\r\n        dob: response.data.dob.split(\"T\")[0],\r\n      });\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error(\"Error fetching user profile:\", err.message);\r\n      setError(\"Failed to fetch user profile. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div className=\"alert alert-danger\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>User Dashboard</h1>\r\n\r\n      {isEditing ? (\r\n        <form>{/* Form for editing */}</form>\r\n      ) : (\r\n        <div>\r\n          <h2>Profile</h2>\r\n          <p>\r\n            <strong>Name:</strong> {user?.name || \"N/A\"}\r\n          </p>\r\n          <p>\r\n            <strong>Mobile:</strong> {user?.mobile || \"N/A\"}\r\n          </p>\r\n          <p>\r\n            <strong>Email:</strong> {user?.email || \"N/A\"}\r\n          </p>\r\n          <p>\r\n            <strong>Address:</strong> {user?.address || \"N/A\"}\r\n          </p>\r\n          <p>\r\n            <strong>Gender:</strong> {user?.gender || \"N/A\"}\r\n          </p>\r\n          <p>\r\n            <strong>Date of Birth:</strong>{\" \"}\r\n            {user?.dob ? new Date(user.dob).toLocaleDateString() : \"N/A\"}\r\n          </p>\r\n          <button\r\n            onClick={() => setIsEditing(true)}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Edit Profile\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UDashboard;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const UDashboard = () => {\r\n//   const [user, setUser] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     mobile: \"\",\r\n//     email: \"\",\r\n//     address: \"\",\r\n//     gender: \"\",\r\n//     dob: \"\",\r\n//   });\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // Retrieve user ID from sessionStorage\r\n//   const userId = sessionStorage.getItem(\"currentUserId\");\r\n\r\n//   // Redirect if no user ID is found in sessionStorage\r\n//   useEffect(() => {\r\n//     if (!userId) {\r\n//       setError(\"User not logged in. Redirecting...\");\r\n//       setTimeout(() => (window.location.href = \"/login\"), 2000);\r\n//     }\r\n//   }, [userId]);\r\n\r\n//   // Fetch the logged-in user's profile\r\n//   const fetchUserProfile = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await axios.get(`http://localhost:2323/users/${userId}`);\r\n//       setUser(response.data);\r\n//       setFormData({\r\n//         name: response.data.name,\r\n//         mobile: response.data.mobile,\r\n//         email: response.data.email,\r\n//         address: response.data.address || \"\",\r\n//         gender: response.data.gender,\r\n//         dob: response.data.dob.split(\"T\")[0],\r\n//       });\r\n//       setError(null);\r\n//     } catch (err) {\r\n//       setError(\"Failed to fetch user profile. Please try again later.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (userId) fetchUserProfile();\r\n//   }, [userId]);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   // Submit updated profile\r\n//   const handleUpdate = async (e) => {\r\n//     e.preventDefault();\r\n//     if (\r\n//       !formData.name ||\r\n//       !formData.mobile ||\r\n//       !formData.email ||\r\n//       !formData.gender ||\r\n//       !formData.dob\r\n//     ) {\r\n//       setError(\"Please fill all required fields\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:2323/users/${userId}`, formData);\r\n//       setIsEditing(false);\r\n//       fetchUserProfile(); // Refresh data\r\n//       setError(null);\r\n//     } catch (err) {\r\n//       setError(\"Failed to update profile. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>User Dashboard</h1>\r\n\r\n//       {isEditing ? (\r\n//         <form onSubmit={handleUpdate}>{/* Form fields */}</form>\r\n//       ) : (\r\n//         <div>\r\n//           <h2>Profile</h2>\r\n//           <p>\r\n//             <strong>Name:</strong> {user?.name || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Mobile:</strong> {user?.mobile || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Email:</strong> {user?.email || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Address:</strong> {user?.address || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Gender:</strong> {user?.gender || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Date of Birth:</strong>{\" \"}\r\n//             {user?.dob ? new Date(user.dob).toLocaleDateString() : \"N/A\"}\r\n//           </p>\r\n//           <button\r\n//             onClick={() => setIsEditing(true)}\r\n//             className=\"btn btn-primary\"\r\n//           >\r\n//             Edit Profile\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UDashboard;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const UDashboard = () => {\r\n//   const [user, setUser] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     mobile: \"\",\r\n//     email: \"\",\r\n//     address: \"\",\r\n//     gender: \"\",\r\n//     dob: \"\",\r\n//   });\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // Get the logged-in user's ID from sessionStorage\r\n//   const userId = sessionStorage.getItem(\"currentUserId\");\r\n\r\n//   // Fetch the logged-in user's profile\r\n//   const fetchUserProfile = () => {\r\n//     setLoading(true);\r\n//     axios\r\n//       .get(`http://localhost:2323/users/${userId}`)\r\n//       .then((res) => {\r\n//         setUser(res.data);\r\n//         setFormData({\r\n//           name: res.data.name,\r\n//           mobile: res.data.mobile,\r\n//           email: res.data.email,\r\n//           address: res.data.address || \"\",\r\n//           gender: res.data.gender,\r\n//           dob: res.data.dob.split(\"T\")[0], // Format date\r\n//         });\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((err) => {\r\n//         setError(err.message);\r\n//         setLoading(false);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUserProfile();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   // Submit updated profile\r\n//   const handleUpdate = (e) => {\r\n//     e.preventDefault();\r\n//     if (\r\n//       !formData.name ||\r\n//       !formData.mobile ||\r\n//       !formData.email ||\r\n//       !formData.gender ||\r\n//       !formData.dob\r\n//     ) {\r\n//       setError(\"Please fill all required fields\");\r\n//       return;\r\n//     }\r\n\r\n//     axios\r\n//       .put(`http://localhost:2323/users/${userId}`, formData)\r\n//       .then(() => {\r\n//         setIsEditing(false);\r\n//         fetchUserProfile();\r\n//         setError(null);\r\n//       })\r\n//       .catch((err) => setError(err.message));\r\n//   };\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>User Dashboard</h1>\r\n\r\n//       {isEditing ? (\r\n//         <form onSubmit={handleUpdate}>{/* Form fields */}</form>\r\n//       ) : (\r\n//         <div>{/* Display Profile */}</div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UDashboard;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const UDashboard = () => {\r\n//   const [user, setUser] = useState(null); // User details\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     mobile: \"\",\r\n//     email: \"\",\r\n//     address: \"\",\r\n//     gender: \"\",\r\n//     dob: \"\",\r\n//   }); // For form inputs\r\n//   const [isEditing, setIsEditing] = useState(false); // Toggle editing state\r\n//   const [error, setError] = useState(null); // Error messages\r\n//   const [loading, setLoading] = useState(true); // Loading state\r\n\r\n//   const userId = \"CURRENT_USER_ID\"; // Replace with the logged-in user's ID, fetched from authentication/session\r\n\r\n//   // Fetch the logged-in user's profile\r\n//   const fetchUserProfile = () => {\r\n//     setLoading(true);\r\n//     axios\r\n//       .get(`http://localhost:2323/users/${userId}`)\r\n//       .then((res) => {\r\n//         setUser(res.data);\r\n//         setFormData({\r\n//           name: res.data.name,\r\n//           mobile: res.data.mobile,\r\n//           email: res.data.email,\r\n//           address: res.data.address || \"\",\r\n//           gender: res.data.gender,\r\n//           dob: res.data.dob.split(\"T\")[0], // Format date\r\n//         });\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((err) => {\r\n//         setError(err.message);\r\n//         setLoading(false);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUserProfile();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   // Submit updated profile\r\n//   const handleUpdate = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Validation\r\n//     if (\r\n//       !formData.name ||\r\n//       !formData.mobile ||\r\n//       !formData.email ||\r\n//       !formData.gender ||\r\n//       !formData.dob\r\n//     ) {\r\n//       setError(\"Please fill all required fields\");\r\n//       return;\r\n//     }\r\n\r\n//     axios\r\n//       .put(`http://localhost:2323/users/${userId}`, formData)\r\n//       .then(() => {\r\n//         setIsEditing(false);\r\n//         fetchUserProfile(); // Refresh data\r\n//         setError(null);\r\n//       })\r\n//       .catch((err) => setError(err.message));\r\n//   };\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>User Dashboard</h1>\r\n\r\n//       {isEditing ? (\r\n//         // Edit Form\r\n//         <form onSubmit={handleUpdate}>\r\n//           <div className=\"mb-3\">\r\n//             <label>Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               value={formData.name}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label>Mobile</label>\r\n//             <input\r\n//               type=\"tel\"\r\n//               name=\"mobile\"\r\n//               value={formData.mobile}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label>Email</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               value={formData.email}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label>Address</label>\r\n//             <textarea\r\n//               name=\"address\"\r\n//               value={formData.address}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//             ></textarea>\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label>Gender</label>\r\n//             <select\r\n//               name=\"gender\"\r\n//               value={formData.gender}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//               required\r\n//             >\r\n//               <option value=\"\">Select Gender</option>\r\n//               <option value=\"Male\">Male</option>\r\n//               <option value=\"Female\">Female</option>\r\n//               <option value=\"Other\">Other</option>\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label>Date of Birth</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               name=\"dob\"\r\n//               value={formData.dob}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" className=\"btn btn-primary me-2\">\r\n//             Save\r\n//           </button>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => setIsEditing(false)}\r\n//             className=\"btn btn-secondary\"\r\n//           >\r\n//             Cancel\r\n//           </button>\r\n//         </form>\r\n//       ) : (\r\n//         // Profile Display\r\n//         <div>\r\n//           <h2>Profile</h2>\r\n//           <p>\r\n//             <strong>Name:</strong> {user.name}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Mobile:</strong> {user.mobile}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Email:</strong> {user.email}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Address:</strong> {user.address || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Gender:</strong> {user.gender}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Date of Birth:</strong>{\" \"}\r\n//             {new Date(user.dob).toLocaleDateString()}\r\n//           </p>\r\n//           <button\r\n//             onClick={() => setIsEditing(true)}\r\n//             className=\"btn btn-primary\"\r\n//           >\r\n//             Edit Profile\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,GAAG,EAAE;EACP,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMuB,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;;EAEtD;EACAxB,SAAS,CAAC,MAAM;IACd,IAAI,CAACsB,MAAM,EAAE;MACXG,OAAO,CAACP,KAAK,CAAC,qCAAqC,CAAC;MACpDC,QAAQ,CAAC,uCAAuC,CAAC;MACjDO,UAAU,CAAC,MAAOC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAS,EAAE,IAAI,CAAC;MACzD;IACF;EACF,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCL,OAAO,CAACM,GAAG,CAAC,+BAA+B,EAAET,MAAM,CAAC;IAEpD,IAAI,CAACA,MAAM,EAAE;MACXG,OAAO,CAACP,KAAK,CAAC,mCAAmC,CAAC;MAClD;IACF;IAEA,IAAI;MACFG,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMW,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,GAAG,CAAC,+BAA+BX,MAAM,EAAE,CAAC;MACzEG,OAAO,CAACM,GAAG,CAAC,oCAAoC,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAEhE3B,OAAO,CAACyB,QAAQ,CAACE,IAAI,CAAC;MACtBzB,WAAW,CAAC;QACVC,IAAI,EAAEsB,QAAQ,CAACE,IAAI,CAACxB,IAAI;QACxBC,MAAM,EAAEqB,QAAQ,CAACE,IAAI,CAACvB,MAAM;QAC5BC,KAAK,EAAEoB,QAAQ,CAACE,IAAI,CAACtB,KAAK;QAC1BC,OAAO,EAAEmB,QAAQ,CAACE,IAAI,CAACrB,OAAO,IAAI,EAAE;QACpCC,MAAM,EAAEkB,QAAQ,CAACE,IAAI,CAACpB,MAAM;QAC5BC,GAAG,EAAEiB,QAAQ,CAACE,IAAI,CAACnB,GAAG,CAACoB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC;MACFhB,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZX,OAAO,CAACP,KAAK,CAAC,8BAA8B,EAAEkB,GAAG,CAACC,OAAO,CAAC;MAC1DlB,QAAQ,CAAC,uDAAuD,CAAC;IACnE,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd8B,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIV,OAAO,EAAE,oBAAOjB,OAAA;IAAAmC,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIxB,KAAK,EAAE,oBAAOf,OAAA;IAAKwC,SAAS,EAAC,oBAAoB;IAAAL,QAAA,EAAEpB;EAAK;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEnE,oBACEvC,OAAA;IAAKwC,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBnC,OAAA;MAAAmC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEtB1B,SAAS,gBACRb,OAAA;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoC,CAAC,gBAErCvC,OAAA;MAAAmC,QAAA,gBACEnC,OAAA;QAAAmC,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBvC,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAAmC,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC,CAAApC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,IAAI,KAAI,KAAK;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACJvC,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAAmC,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC,CAAApC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,MAAM,KAAI,KAAK;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACJvC,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAAmC,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC,CAAApC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,KAAK,KAAI,KAAK;MAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACJvC,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAAmC,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC,CAAApC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,OAAO,KAAI,KAAK;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACJvC,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAAmC,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC,CAAApC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,MAAM,KAAI,KAAK;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACJvC,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAAmC,QAAA,EAAQ;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAAC,GAAG,EAClCpC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAES,GAAG,GAAG,IAAI6B,IAAI,CAACtC,IAAI,CAACS,GAAG,CAAC,CAAC8B,kBAAkB,CAAC,CAAC,GAAG,KAAK;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACJvC,OAAA;QACE2C,OAAO,EAAEA,CAAA,KAAM7B,YAAY,CAAC,IAAI,CAAE;QAClC0B,SAAS,EAAC,iBAAiB;QAAAL,QAAA,EAC5B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CAtGID,UAAU;AAAA2C,EAAA,GAAV3C,UAAU;AAwGhB,eAAeA,UAAU;;AAEzignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}