{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const SAD = () => {\n//   const [users, setUsers] = useState([]); // Original list of users\n//   const [filteredUsers, setFilteredUsers] = useState([]); // Filtered list for display\n//   const [searchQuery, setSearchQuery] = useState(\"\"); // Search query\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     role: \"\",\n//     mobile: \"\",\n//     email: \"\",\n//     address: \"\",\n//     gender: \"\",\n//     dob: \"\",\n//     profilePicture: \"\",\n//   });\n//   const [editing, setEditing] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   // Fetch users from the API\n//   const fetchUsers = () => {\n//     setLoading(true);\n//     axios\n//       .get(\"http://localhost:2323/users\")\n//       .then((res) => {\n//         const userData = Array.isArray(res.data) ? res.data : [];\n//         setUsers(userData);\n//         setFilteredUsers(userData);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   };\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   // Handle search query change\n//   const handleSearchChange = (e) => {\n//     const query = e.target.value;\n//     setSearchQuery(query);\n\n//     // Filter users based on the search query\n//     if (query.trim() === \"\") {\n//       setFilteredUsers(users);\n//     } else {\n//       const filtered = users.filter((user) =>\n//         user.name.toLowerCase().includes(query.toLowerCase())\n//       );\n//       setFilteredUsers(filtered);\n//     }\n//   };\n\n//   if (loading) return <div className=\"text-center my-5\">Loading...</div>;\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\n\n//   return (\n//     <div className=\"container py-5\">\n//       <h1 className=\"text-center mb-4\">Super Admin Dashboard</h1>\n\n//       {/* Search Bar */}\n//       <div className=\"mb-4\">\n//         <input\n//           type=\"text\"\n//           className=\"form-control\"\n//           placeholder=\"Search by Name\"\n//           value={searchQuery}\n//           onChange={handleSearchChange}\n//         />\n//       </div>\n\n//       {/* User List */}\n//       <h2 className=\"text-center mb-4\">Users</h2>\n//       <div className=\"row\">\n//         {filteredUsers.map((user) => (\n//           <div key={user.id} className=\"col-md-6 col-lg-4 mb-4\">\n//             <div className=\"card h-100 shadow\">\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{user.name}</h5>\n//                 <p className=\"card-text\">Role: {user.role}</p>\n//                 <p className=\"card-text\">Mobile: {user.mobile}</p>\n//                 <p className=\"card-text\">Email: {user.email}</p>\n//                 <p className=\"card-text\">Gender: {user.gender}</p>\n//                 <p className=\"card-text\">\n//                   DOB: {new Date(user.dob).toLocaleDateString()}\n//                 </p>\n//                 {user.address && (\n//                   <p className=\"card-text\">Address: {user.address}</p>\n//                 )}\n//                 <div className=\"d-flex justify-content-between\">\n//                   <button\n//                     className=\"btn btn-primary\"\n//                     onClick={() => {\n//                       setEditing(user.id);\n//                       setFormData({\n//                         name: user.name,\n//                         role: user.role,\n//                         mobile: user.mobile,\n//                         email: user.email,\n//                         address: user.address || \"\",\n//                         gender: user.gender,\n//                         dob: user.dob.split(\"T\")[0],\n//                         profilePicture: user.profilePicture || \"\",\n//                       });\n//                     }}\n//                   >\n//                     Edit\n//                   </button>\n//                   <button\n//                     className=\"btn btn-danger\"\n//                     // onClick={() => deleteUser(user.id)}\n//                   >\n//                     Delete\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SAD;","map":{"version":3,"names":[],"sources":["D:/reactJS/taskShiftWave/fe/src/Pages/Search.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const SAD = () => {\r\n//   const [users, setUsers] = useState([]); // Original list of users\r\n//   const [filteredUsers, setFilteredUsers] = useState([]); // Filtered list for display\r\n//   const [searchQuery, setSearchQuery] = useState(\"\"); // Search query\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     role: \"\",\r\n//     mobile: \"\",\r\n//     email: \"\",\r\n//     address: \"\",\r\n//     gender: \"\",\r\n//     dob: \"\",\r\n//     profilePicture: \"\",\r\n//   });\r\n//   const [editing, setEditing] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // Fetch users from the API\r\n//   const fetchUsers = () => {\r\n//     setLoading(true);\r\n//     axios\r\n//       .get(\"http://localhost:2323/users\")\r\n//       .then((res) => {\r\n//         const userData = Array.isArray(res.data) ? res.data : [];\r\n//         setUsers(userData);\r\n//         setFilteredUsers(userData);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((err) => {\r\n//         setError(err.message);\r\n//         setLoading(false);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   // Handle search query change\r\n//   const handleSearchChange = (e) => {\r\n//     const query = e.target.value;\r\n//     setSearchQuery(query);\r\n\r\n//     // Filter users based on the search query\r\n//     if (query.trim() === \"\") {\r\n//       setFilteredUsers(users);\r\n//     } else {\r\n//       const filtered = users.filter((user) =>\r\n//         user.name.toLowerCase().includes(query.toLowerCase())\r\n//       );\r\n//       setFilteredUsers(filtered);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <div className=\"text-center my-5\">Loading...</div>;\r\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container py-5\">\r\n//       <h1 className=\"text-center mb-4\">Super Admin Dashboard</h1>\r\n\r\n//       {/* Search Bar */}\r\n//       <div className=\"mb-4\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"form-control\"\r\n//           placeholder=\"Search by Name\"\r\n//           value={searchQuery}\r\n//           onChange={handleSearchChange}\r\n//         />\r\n//       </div>\r\n\r\n//       {/* User List */}\r\n//       <h2 className=\"text-center mb-4\">Users</h2>\r\n//       <div className=\"row\">\r\n//         {filteredUsers.map((user) => (\r\n//           <div key={user.id} className=\"col-md-6 col-lg-4 mb-4\">\r\n//             <div className=\"card h-100 shadow\">\r\n//               <div className=\"card-body\">\r\n//                 <h5 className=\"card-title\">{user.name}</h5>\r\n//                 <p className=\"card-text\">Role: {user.role}</p>\r\n//                 <p className=\"card-text\">Mobile: {user.mobile}</p>\r\n//                 <p className=\"card-text\">Email: {user.email}</p>\r\n//                 <p className=\"card-text\">Gender: {user.gender}</p>\r\n//                 <p className=\"card-text\">\r\n//                   DOB: {new Date(user.dob).toLocaleDateString()}\r\n//                 </p>\r\n//                 {user.address && (\r\n//                   <p className=\"card-text\">Address: {user.address}</p>\r\n//                 )}\r\n//                 <div className=\"d-flex justify-content-between\">\r\n//                   <button\r\n//                     className=\"btn btn-primary\"\r\n//                     onClick={() => {\r\n//                       setEditing(user.id);\r\n//                       setFormData({\r\n//                         name: user.name,\r\n//                         role: user.role,\r\n//                         mobile: user.mobile,\r\n//                         email: user.email,\r\n//                         address: user.address || \"\",\r\n//                         gender: user.gender,\r\n//                         dob: user.dob.split(\"T\")[0],\r\n//                         profilePicture: user.profilePicture || \"\",\r\n//                       });\r\n//                     }}\r\n//                   >\r\n//                     Edit\r\n//                   </button>\r\n//                   <button\r\n//                     className=\"btn btn-danger\"\r\n//                     // onClick={() => deleteUser(user.id)}\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SAD;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}