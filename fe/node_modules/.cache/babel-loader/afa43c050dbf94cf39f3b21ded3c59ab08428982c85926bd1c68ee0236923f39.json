{"ast":null,"code":"\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const SADashboard = () => {\n//   const [users, setUsers] = useState([]); // For listing users\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     role: \"\",\n//     mobile: \"\",\n//     email: \"\",\n//     address: \"\",\n//     gender: \"\",\n//     dob: \"\",\n//     profilePicture: \"\",\n//   }); // For Add and Update form\n//   const [editing, setEditing] = useState(null); // To track the user being edited\n//   const [error, setError] = useState(null); // Error messages\n//   const [loading, setLoading] = useState(true); // Loading state\n\n//   // Fetch users from the API\n//   const fetchUsers = () => {\n//     setLoading(true);\n//     axios\n//       .get(\"http://localhost:2323/users\")\n//       .then((res) => {\n//         setUsers(Array.isArray(res.data) ? res.data : []);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   };\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   // Handle form inputs\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   // Add or Update user\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (\n//       !formData.name ||\n//       !formData.role ||\n//       !formData.mobile ||\n//       !formData.email ||\n//       !formData.gender ||\n//       !formData.dob\n//     ) {\n//       setError(\"Please fill all required fields\");\n//       return;\n//     }\n\n//     if (editing) {\n//       // Update user\n//       axios\n//         .put(`http://localhost:2323/users/${editing}`, formData)\n//         .then(() => {\n//           fetchUsers();\n//           resetForm();\n//         })\n//         .catch((err) => setError(err.message));\n//     } else {\n//       // Add new user\n//       axios\n//         .post(\"http://localhost:2323/users\", formData)\n//         .then(() => {\n//           fetchUsers();\n//           resetForm();\n//         })\n//         .catch((err) => setError(err.message));\n//     }\n//   };\n\n//   // Delete user\n//   const deleteUser = (id) => {\n//     axios\n//       .delete(`http://localhost:2323/users/${id}`)\n//       .then(() => {\n//         setUsers(users.filter((user) => user.id !== id));\n//       })\n//       .catch((err) => setError(err.message));\n//   };\n\n//   // Reset form and editing state\n//   const resetForm = () => {\n//     setFormData({\n//       name: \"\",\n//       role: \"\",\n//       mobile: \"\",\n//       email: \"\",\n//       address: \"\",\n//       gender: \"\",\n//       dob: \"\",\n//       profilePicture: \"\",\n//     });\n//     setEditing(null);\n//     setError(null);\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Manage Users</h1>\n\n//       {/* Add/Update User Form */}\n//       <form onSubmit={handleSubmit} className=\"mb-4\">\n//         <h2>{editing ? \"Update User\" : \"Add User\"}</h2>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Name\"\n//           className=\"form-control mb-2\"\n//           required\n//         />\n//         <select\n//           name=\"role\"\n//           value={formData.role}\n//           onChange={handleChange}\n//           className=\"form-control mb-2\"\n//           required\n//         >\n//           <option value=\"\">Select Role</option>\n//           <option value=\"Super Admin\">Super Admin</option>\n//           <option value=\"Admin\">Admin</option>\n//           <option value=\"User\">User</option>\n//         </select>\n//         <input\n//           type=\"tel\"\n//           name=\"mobile\"\n//           value={formData.mobile}\n//           onChange={handleChange}\n//           placeholder=\"Mobile\"\n//           className=\"form-control mb-2\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           placeholder=\"Email\"\n//           className=\"form-control mb-2\"\n//           required\n//         />\n//         <select\n//           name=\"gender\"\n//           value={formData.gender}\n//           onChange={handleChange}\n//           className=\"form-control mb-2\"\n//           required\n//         >\n//           <option value=\"\">Select Gender</option>\n//           <option value=\"Male\">Male</option>\n//           <option value=\"Female\">Female</option>\n//           <option value=\"Other\">Other</option>\n//         </select>\n//         <input\n//           type=\"date\"\n//           name=\"dob\"\n//           value={formData.dob}\n//           onChange={handleChange}\n//           className=\"form-control mb-2\"\n//           required\n//         />\n//         <textarea\n//           name=\"address\"\n//           value={formData.address}\n//           onChange={handleChange}\n//           placeholder=\"Address\"\n//           className=\"form-control mb-2\"\n//         ></textarea>\n//         <input\n//           type=\"text\"\n//           name=\"profilePicture\"\n//           value={formData.profilePicture}\n//           onChange={handleChange}\n//           placeholder=\"Profile Picture URL\"\n//           className=\"form-control mb-2\"\n//         />\n//         <button type=\"submit\" className=\"btn btn-primary me-2\">\n//           {editing ? \"Update\" : \"Add\"}\n//         </button>\n//         {editing && (\n//           <button\n//             type=\"button\"\n//             className=\"btn btn-secondary\"\n//             onClick={resetForm}\n//           >\n//             Cancel\n//           </button>\n//         )}\n//       </form>\n\n//       {/* User List */}\n//       <h2>Users</h2>\n//       <div className=\"row\">\n//         {users.map((user) => (\n//           <div key={user.id} className=\"col-md-6 mb-3\">\n//             <div className=\"card\">\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{user.name}</h5>\n//                 <p className=\"card-text\">Role: {user.role}</p>\n//                 <p className=\"card-text\">Mobile: {user.mobile}</p>\n//                 <p className=\"card-text\">Email: {user.email}</p>\n//                 <p className=\"card-text\">Gender: {user.gender}</p>\n//                 <p className=\"card-text\">\n//                   DOB: {new Date(user.dob).toLocaleDateString()}\n//                 </p>\n//                 {user.address && (\n//                   <p className=\"card-text\">Address: {user.address}</p>\n//                 )}\n//                 <button\n//                   className=\"btn btn-primary me-2\"\n//                   onClick={() => {\n//                     setEditing(user.id);\n//                     setFormData({\n//                       name: user.name,\n//                       role: user.role,\n//                       mobile: user.mobile,\n//                       email: user.email,\n//                       address: user.address || \"\",\n//                       gender: user.gender,\n//                       dob: user.dob.split(\"T\")[0],\n//                       profilePicture: user.profilePicture || \"\",\n//                     });\n//                   }}\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   className=\"btn btn-danger\"\n//                   onClick={() => deleteUser(user.id)}\n//                 >\n//                   Delete\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SADashboard;","map":{"version":3,"names":[],"sources":["D:/reactJS/taskShiftWave/fe/src/Pages/SADashboard.jsx"],"sourcesContent":["\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const SADashboard = () => {\r\n//   const [users, setUsers] = useState([]); // For listing users\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     role: \"\",\r\n//     mobile: \"\",\r\n//     email: \"\",\r\n//     address: \"\",\r\n//     gender: \"\",\r\n//     dob: \"\",\r\n//     profilePicture: \"\",\r\n//   }); // For Add and Update form\r\n//   const [editing, setEditing] = useState(null); // To track the user being edited\r\n//   const [error, setError] = useState(null); // Error messages\r\n//   const [loading, setLoading] = useState(true); // Loading state\r\n\r\n//   // Fetch users from the API\r\n//   const fetchUsers = () => {\r\n//     setLoading(true);\r\n//     axios\r\n//       .get(\"http://localhost:2323/users\")\r\n//       .then((res) => {\r\n//         setUsers(Array.isArray(res.data) ? res.data : []);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((err) => {\r\n//         setError(err.message);\r\n//         setLoading(false);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   // Handle form inputs\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   // Add or Update user\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (\r\n//       !formData.name ||\r\n//       !formData.role ||\r\n//       !formData.mobile ||\r\n//       !formData.email ||\r\n//       !formData.gender ||\r\n//       !formData.dob\r\n//     ) {\r\n//       setError(\"Please fill all required fields\");\r\n//       return;\r\n//     }\r\n\r\n//     if (editing) {\r\n//       // Update user\r\n//       axios\r\n//         .put(`http://localhost:2323/users/${editing}`, formData)\r\n//         .then(() => {\r\n//           fetchUsers();\r\n//           resetForm();\r\n//         })\r\n//         .catch((err) => setError(err.message));\r\n//     } else {\r\n//       // Add new user\r\n//       axios\r\n//         .post(\"http://localhost:2323/users\", formData)\r\n//         .then(() => {\r\n//           fetchUsers();\r\n//           resetForm();\r\n//         })\r\n//         .catch((err) => setError(err.message));\r\n//     }\r\n//   };\r\n\r\n//   // Delete user\r\n//   const deleteUser = (id) => {\r\n//     axios\r\n//       .delete(`http://localhost:2323/users/${id}`)\r\n//       .then(() => {\r\n//         setUsers(users.filter((user) => user.id !== id));\r\n//       })\r\n//       .catch((err) => setError(err.message));\r\n//   };\r\n\r\n//   // Reset form and editing state\r\n//   const resetForm = () => {\r\n//     setFormData({\r\n//       name: \"\",\r\n//       role: \"\",\r\n//       mobile: \"\",\r\n//       email: \"\",\r\n//       address: \"\",\r\n//       gender: \"\",\r\n//       dob: \"\",\r\n//       profilePicture: \"\",\r\n//     });\r\n//     setEditing(null);\r\n//     setError(null);\r\n//   };\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>Manage Users</h1>\r\n\r\n//       {/* Add/Update User Form */}\r\n//       <form onSubmit={handleSubmit} className=\"mb-4\">\r\n//         <h2>{editing ? \"Update User\" : \"Add User\"}</h2>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"name\"\r\n//           value={formData.name}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Name\"\r\n//           className=\"form-control mb-2\"\r\n//           required\r\n//         />\r\n//         <select\r\n//           name=\"role\"\r\n//           value={formData.role}\r\n//           onChange={handleChange}\r\n//           className=\"form-control mb-2\"\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select Role</option>\r\n//           <option value=\"Super Admin\">Super Admin</option>\r\n//           <option value=\"Admin\">Admin</option>\r\n//           <option value=\"User\">User</option>\r\n//         </select>\r\n//         <input\r\n//           type=\"tel\"\r\n//           name=\"mobile\"\r\n//           value={formData.mobile}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Mobile\"\r\n//           className=\"form-control mb-2\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           value={formData.email}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Email\"\r\n//           className=\"form-control mb-2\"\r\n//           required\r\n//         />\r\n//         <select\r\n//           name=\"gender\"\r\n//           value={formData.gender}\r\n//           onChange={handleChange}\r\n//           className=\"form-control mb-2\"\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select Gender</option>\r\n//           <option value=\"Male\">Male</option>\r\n//           <option value=\"Female\">Female</option>\r\n//           <option value=\"Other\">Other</option>\r\n//         </select>\r\n//         <input\r\n//           type=\"date\"\r\n//           name=\"dob\"\r\n//           value={formData.dob}\r\n//           onChange={handleChange}\r\n//           className=\"form-control mb-2\"\r\n//           required\r\n//         />\r\n//         <textarea\r\n//           name=\"address\"\r\n//           value={formData.address}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Address\"\r\n//           className=\"form-control mb-2\"\r\n//         ></textarea>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"profilePicture\"\r\n//           value={formData.profilePicture}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Profile Picture URL\"\r\n//           className=\"form-control mb-2\"\r\n//         />\r\n//         <button type=\"submit\" className=\"btn btn-primary me-2\">\r\n//           {editing ? \"Update\" : \"Add\"}\r\n//         </button>\r\n//         {editing && (\r\n//           <button\r\n//             type=\"button\"\r\n//             className=\"btn btn-secondary\"\r\n//             onClick={resetForm}\r\n//           >\r\n//             Cancel\r\n//           </button>\r\n//         )}\r\n//       </form>\r\n\r\n//       {/* User List */}\r\n//       <h2>Users</h2>\r\n//       <div className=\"row\">\r\n//         {users.map((user) => (\r\n//           <div key={user.id} className=\"col-md-6 mb-3\">\r\n//             <div className=\"card\">\r\n//               <div className=\"card-body\">\r\n//                 <h5 className=\"card-title\">{user.name}</h5>\r\n//                 <p className=\"card-text\">Role: {user.role}</p>\r\n//                 <p className=\"card-text\">Mobile: {user.mobile}</p>\r\n//                 <p className=\"card-text\">Email: {user.email}</p>\r\n//                 <p className=\"card-text\">Gender: {user.gender}</p>\r\n//                 <p className=\"card-text\">\r\n//                   DOB: {new Date(user.dob).toLocaleDateString()}\r\n//                 </p>\r\n//                 {user.address && (\r\n//                   <p className=\"card-text\">Address: {user.address}</p>\r\n//                 )}\r\n//                 <button\r\n//                   className=\"btn btn-primary me-2\"\r\n//                   onClick={() => {\r\n//                     setEditing(user.id);\r\n//                     setFormData({\r\n//                       name: user.name,\r\n//                       role: user.role,\r\n//                       mobile: user.mobile,\r\n//                       email: user.email,\r\n//                       address: user.address || \"\",\r\n//                       gender: user.gender,\r\n//                       dob: user.dob.split(\"T\")[0],\r\n//                       profilePicture: user.profilePicture || \"\",\r\n//                     });\r\n//                   }}\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"btn btn-danger\"\r\n//                   onClick={() => deleteUser(user.id)}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SADashboard;\r\n"],"mappings":";;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}