{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\taskShiftWave\\\\fe\\\\src\\\\Pages\\\\log.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LogPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    role: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:2323/users\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch user data\");\n      }\n      const users = await response.json();\n      const user = users.find(u => u.name.toLowerCase() === formData.username.toLowerCase() && u.role === formData.role);\n      if (user) {\n        sessionStorage.setItem(\"currentUserId\", user.id);\n        switch (user.role) {\n          case \"Super Admin\":\n            window.location.href = \"/sadashboard\";\n            break;\n          case \"Admin\":\n            window.location.href = \"/adashboard\";\n            break;\n          case \"User\":\n            window.location.href = \"/udashboard\";\n            break;\n          default:\n            window.location.href = \"/dashboard\";\n        }\n      } else {\n        setError(\"Invalid username or role combination\");\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      setError(err.message || \"An error occurred during login\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    style: {\n      background: \"https://static.vecteezy.com/system/resources/previews/010/847/581/non_2x/gradient-background-for-covers-wallpaper-social-media-web-design-and-many-other-vector.jpg\",\n      minHeight: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center align-items-center min-vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card border-dark border\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" card-body p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"ACCESS MANAGEMENT SYSTEM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleLogin,\n              children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-danger text-center\",\n                role: \"alert\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  className: \"form-label fw-bold\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"username\",\n                  name: \"username\",\n                  type: \"text\",\n                  className: \"form-control form-control-lg\",\n                  placeholder: \"Enter your username\",\n                  value: formData.username,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"role\",\n                  className: \"form-label fw-bold\",\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"role\",\n                  name: \"role\",\n                  className: \"form-control form-control-lg\",\n                  value: formData.role,\n                  onChange: handleChange,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Role\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Super Admin\",\n                    children: \"Super Admin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Admin\",\n                    children: \"Admin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"User\",\n                    children: \"User\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary w-100 btn-lg mb-3\",\n                disabled: isLoading,\n                style: {\n                  borderRadius: \"10px\",\n                  background: \"#007bff\",\n                  borderColor: \"#007bff\"\n                },\n                children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"spinner-border spinner-border-sm me-2\",\n                    role: \"status\",\n                    \"aria-hidden\": \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 23\n                  }, this), \"Logging in...\"]\n                }, void 0, true) : \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(LogPage, \"bXsMCbhUG39gRnl92YE575VRtj4=\");\n_c = LogPage;\nexport default LogPage;\n\n// import { useState } from \"react\";\n\n// const LogPage = () => {\n//   const [formData, setFormData] = useState({\n//     username: \"\",\n//     role: \"\",\n//   });\n//   const [error, setError] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n//     setError(\"\");\n\n//     try {\n//       // Fetch user data to verify credentials\n//       const response = await fetch(\"http://localhost:2323/users\");\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch user data\");\n//       }\n//       const users = await response.json();\n\n//       // Find user matching both username and role\n//       const user = users.find(\n//         (u) =>\n//           u.name.toLowerCase() === formData.username.toLowerCase() &&\n//           u.role === formData.role\n//       );\n\n//       if (user) {\n//         // Store user ID in sessionStorage\n//         sessionStorage.setItem(\"currentUserId\", user.id);\n\n//         // Navigate based on role\n//         switch (user.role) {\n//           case \"Super Admin\":\n//             window.location.href = \"/sadashboard\";\n//             break;\n//           case \"Admin\":\n//             window.location.href = \"/adashboard\";\n//             break;\n//           case \"User\":\n//             window.location.href = \"/udashboard\";\n//             break;\n//           default:\n//             window.location.href = \"/dashboard\";\n//         }\n//       } else {\n//         setError(\"Invalid username or role combination\");\n//       }\n//     } catch (err) {\n//       console.error(\"Login error:\", err);\n//       setError(err.message || \"An error occurred during login\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row justify-content-center align-items-center min-vh-100\">\n//         <div className=\"col-md-6 col-lg-4\">\n//           <div className=\"card shadow\">\n//             <div className=\"card-body p-4\">\n//               <h2 className=\"text-center mb-4\">Login to DevAgentHub</h2>\n\n//               <form onSubmit={handleLogin}>\n//                 {error && (\n//                   <div className=\"alert alert-danger\" role=\"alert\">\n//                     {error}\n//                   </div>\n//                 )}\n\n//                 <div className=\"mb-3\">\n//                   <label htmlFor=\"username\" className=\"form-label\">\n//                     Username\n//                   </label>\n//                   <input\n//                     id=\"username\"\n//                     name=\"username\"\n//                     type=\"text\"\n//                     className=\"form-control\"\n//                     placeholder=\"Enter your username\"\n//                     value={formData.username}\n//                     onChange={handleChange}\n//                     required\n//                   />\n//                 </div>\n\n//                 <div className=\"mb-3\">\n//                   <label htmlFor=\"role\" className=\"form-label\">\n//                     Role\n//                   </label>\n//                   <select\n//                     id=\"role\"\n//                     name=\"role\"\n//                     className=\"form-control\"\n//                     value={formData.role}\n//                     onChange={handleChange}\n//                     required\n//                   >\n//                     <option value=\"\">Select Role</option>\n//                     <option value=\"Super Admin\">Super Admin</option>\n//                     <option value=\"Admin\">Admin</option>\n//                     <option value=\"User\">User</option>\n//                   </select>\n//                 </div>\n\n//                 <button\n//                   type=\"submit\"\n//                   className=\"btn btn-primary w-100 mb-3\"\n//                   disabled={isLoading}\n//                 >\n//                   {isLoading ? (\n//                     <>\n//                       <span\n//                         className=\"spinner-border spinner-border-sm me-2\"\n//                         role=\"status\"\n//                         aria-hidden=\"true\"\n//                       ></span>\n//                       Logging in...\n//                     </>\n//                   ) : (\n//                     \"Sign in\"\n//                   )}\n//                 </button>\n\n//                 <div className=\"text-center mb-3\">\n//                   <a href=\"/forgot-password\" className=\"text-decoration-none\">\n//                     Forgot password?\n//                   </a>\n//                 </div>\n\n//                 <div className=\"text-center\">\n//                   <span>Don't have an account? </span>\n//                   <a href=\"/signup\" className=\"text-decoration-none\">\n//                     Sign up\n//                   </a>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LogPage;\n\n// // import { useState } from \"react\";\n\n// // const LogPage = () => {\n// //   const [formData, setFormData] = useState({\n// //     username: \"\",\n// //     role: \"\",\n// //   });\n// //   const [error, setError] = useState(\"\");\n// //   const [isLoading, setIsLoading] = useState(false);\n\n// //   const handleChange = (e) => {\n// //     setFormData({\n// //       ...formData,\n// //       [e.target.name]: e.target.value,\n// //     });\n// //   };\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     setIsLoading(true);\n// //     setError(\"\");\n\n// //     try {\n// //       // Fetch user data to verify credentials\n// //       const response = await fetch(\"http://localhost:2323/users\");\n// //       if (!response.ok) {\n// //         throw new Error(\"Failed to fetch user data\");\n// //       }\n// //       const users = await response.json();\n\n// //       // Find user matching both username and role\n// //       const user = users.find(\n// //         (u) =>\n// //           u.name.toLowerCase() === formData.username.toLowerCase() &&\n// //           u.role === formData.role\n// //       );\n\n// //       if (user) {\n// //         // Store user info in sessionStorage for persistence\n// //         sessionStorage.setItem(\n// //           \"currentUser\",\n// //           JSON.stringify({\n// //             id: user.id,\n// //             name: user.name,\n// //             role: user.role,\n// //             email: user.email,\n// //           })\n// //         );\n\n// //         // Navigate based on role\n// //         switch (user.role) {\n// //           case \"Super Admin\":\n// //             window.location.href = \"/sadashboard\";\n// //             break;\n// //           case \"Admin\":\n// //             window.location.href = \"/adashboard\";\n// //             break;\n// //           case \"User\":\n// //             window.location.href = \"/udashboard\";\n// //             break;\n// //           default:\n// //             window.location.href = \"/dashboard\";\n// //         }\n// //       } else {\n// //         setError(\"Invalid username or role combination\");\n// //       }\n// //     } catch (err) {\n// //       console.error(\"Login error:\", err);\n// //       setError(err.message || \"An error occurred during login\");\n// //     } finally {\n// //       setIsLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"container\">\n// //       <div className=\"row justify-content-center align-items-center min-vh-100\">\n// //         <div className=\"col-md-6 col-lg-4\">\n// //           <div className=\"card shadow\">\n// //             <div className=\"card-body p-4\">\n// //               <h2 className=\"text-center mb-4\">Login to DevAgentHub</h2>\n\n// //               <form onSubmit={handleLogin}>\n// //                 {error && (\n// //                   <div className=\"alert alert-danger\" role=\"alert\">\n// //                     {error}\n// //                   </div>\n// //                 )}\n\n// //                 <div className=\"mb-3\">\n// //                   <label htmlFor=\"username\" className=\"form-label\">\n// //                     Username\n// //                   </label>\n// //                   <input\n// //                     id=\"username\"\n// //                     name=\"username\"\n// //                     type=\"text\"\n// //                     className=\"form-control\"\n// //                     placeholder=\"Enter your username\"\n// //                     value={formData.username}\n// //                     onChange={handleChange}\n// //                     required\n// //                   />\n// //                 </div>\n\n// //                 <div className=\"mb-3\">\n// //                   <label htmlFor=\"role\" className=\"form-label\">\n// //                     Role\n// //                   </label>\n// //                   <select\n// //                     id=\"role\"\n// //                     name=\"role\"\n// //                     className=\"form-control\"\n// //                     value={formData.role}\n// //                     onChange={handleChange}\n// //                     required\n// //                   >\n// //                     <option value=\"\">Select Role</option>\n// //                     <option value=\"Super Admin\">Super Admin</option>\n// //                     <option value=\"Admin\">Admin</option>\n// //                     <option value=\"User\">User</option>\n// //                   </select>\n// //                 </div>\n\n// //                 <button\n// //                   type=\"submit\"\n// //                   className=\"btn btn-primary w-100 mb-3\"\n// //                   disabled={isLoading}\n// //                 >\n// //                   {isLoading ? (\n// //                     <>\n// //                       <span\n// //                         className=\"spinner-border spinner-border-sm me-2\"\n// //                         role=\"status\"\n// //                         aria-hidden=\"true\"\n// //                       ></span>\n// //                       Logging in...\n// //                     </>\n// //                   ) : (\n// //                     \"Sign in\"\n// //                   )}\n// //                 </button>\n\n// //                 <div className=\"text-center mb-3\">\n// //                   <a href=\"/forgot-password\" className=\"text-decoration-none\">\n// //                     Forgot password?\n// //                   </a>\n// //                 </div>\n\n// //                 <div className=\"text-center\">\n// //                   <span>Don't have an account? </span>\n// //                   <a href=\"/signup\" className=\"text-decoration-none\">\n// //                     Sign up\n// //                   </a>\n// //                 </div>\n// //               </form>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default LogPage;\nvar _c;\n$RefreshReg$(_c, \"LogPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LogPage","_s","formData","setFormData","username","role","error","setError","isLoading","setIsLoading","handleChange","e","target","name","value","handleLogin","preventDefault","response","fetch","ok","Error","users","json","user","find","u","toLowerCase","sessionStorage","setItem","id","window","location","href","err","console","message","className","style","background","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","onChange","required","disabled","borderRadius","borderColor","_c","$RefreshReg$"],"sources":["D:/reactJS/taskShiftWave/fe/src/Pages/log.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst LogPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    role: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:2323/users\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch user data\");\r\n      }\r\n      const users = await response.json();\r\n\r\n      const user = users.find(\r\n        (u) =>\r\n          u.name.toLowerCase() === formData.username.toLowerCase() &&\r\n          u.role === formData.role\r\n      );\r\n\r\n      if (user) {\r\n        sessionStorage.setItem(\"currentUserId\", user.id);\r\n        switch (user.role) {\r\n          case \"Super Admin\":\r\n            window.location.href = \"/sadashboard\";\r\n            break;\r\n          case \"Admin\":\r\n            window.location.href = \"/adashboard\";\r\n            break;\r\n          case \"User\":\r\n            window.location.href = \"/udashboard\";\r\n            break;\r\n          default:\r\n            window.location.href = \"/dashboard\";\r\n        }\r\n      } else {\r\n        setError(\"Invalid username or role combination\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      setError(err.message || \"An error occurred during login\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"\"\r\n      style={{\r\n        background:\r\n          \"https://static.vecteezy.com/system/resources/previews/010/847/581/non_2x/gradient-background-for-covers-wallpaper-social-media-web-design-and-many-other-vector.jpg\",\r\n        minHeight: \"100vh\",\r\n      }}\r\n    >\r\n      <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"card border-dark border\">\r\n            <div className=\" card-body p-4\">\r\n              <h3>ACCESS MANAGEMENT SYSTEM</h3>\r\n              <form onSubmit={handleLogin}>\r\n                {error && (\r\n                  <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                    {error}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"mb-4 mt-4\">\r\n                  <label htmlFor=\"username\" className=\"form-label fw-bold\">\r\n                    Username\r\n                  </label>\r\n                  <input\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Enter your username\"\r\n                    value={formData.username}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-4\">\r\n                  <label htmlFor=\"role\" className=\"form-label fw-bold\">\r\n                    Role\r\n                  </label>\r\n                  <select\r\n                    id=\"role\"\r\n                    name=\"role\"\r\n                    className=\"form-control form-control-lg\"\r\n                    value={formData.role}\r\n                    onChange={handleChange}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select Role</option>\r\n                    <option value=\"Super Admin\">Super Admin</option>\r\n                    <option value=\"Admin\">Admin</option>\r\n                    <option value=\"User\">User</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary w-100 btn-lg mb-3\"\r\n                  disabled={isLoading}\r\n                  style={{\r\n                    borderRadius: \"10px\",\r\n                    background: \"#007bff\",\r\n                    borderColor: \"#007bff\",\r\n                  }}\r\n                >\r\n                  {isLoading ? (\r\n                    <>\r\n                      <span\r\n                        className=\"spinner-border spinner-border-sm me-2\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                      Logging in...\r\n                    </>\r\n                  ) : (\r\n                    \"Sign in\"\r\n                  )}\r\n                </button>\r\n                <button>\r\n                  register\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogPage;\r\n\r\n// import { useState } from \"react\";\r\n\r\n// const LogPage = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     username: \"\",\r\n//     role: \"\",\r\n//   });\r\n//   const [error, setError] = useState(\"\");\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setIsLoading(true);\r\n//     setError(\"\");\r\n\r\n//     try {\r\n//       // Fetch user data to verify credentials\r\n//       const response = await fetch(\"http://localhost:2323/users\");\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Failed to fetch user data\");\r\n//       }\r\n//       const users = await response.json();\r\n\r\n//       // Find user matching both username and role\r\n//       const user = users.find(\r\n//         (u) =>\r\n//           u.name.toLowerCase() === formData.username.toLowerCase() &&\r\n//           u.role === formData.role\r\n//       );\r\n\r\n//       if (user) {\r\n//         // Store user ID in sessionStorage\r\n//         sessionStorage.setItem(\"currentUserId\", user.id);\r\n\r\n//         // Navigate based on role\r\n//         switch (user.role) {\r\n//           case \"Super Admin\":\r\n//             window.location.href = \"/sadashboard\";\r\n//             break;\r\n//           case \"Admin\":\r\n//             window.location.href = \"/adashboard\";\r\n//             break;\r\n//           case \"User\":\r\n//             window.location.href = \"/udashboard\";\r\n//             break;\r\n//           default:\r\n//             window.location.href = \"/dashboard\";\r\n//         }\r\n//       } else {\r\n//         setError(\"Invalid username or role combination\");\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Login error:\", err);\r\n//       setError(err.message || \"An error occurred during login\");\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n//         <div className=\"col-md-6 col-lg-4\">\r\n//           <div className=\"card shadow\">\r\n//             <div className=\"card-body p-4\">\r\n//               <h2 className=\"text-center mb-4\">Login to DevAgentHub</h2>\r\n\r\n//               <form onSubmit={handleLogin}>\r\n//                 {error && (\r\n//                   <div className=\"alert alert-danger\" role=\"alert\">\r\n//                     {error}\r\n//                   </div>\r\n//                 )}\r\n\r\n//                 <div className=\"mb-3\">\r\n//                   <label htmlFor=\"username\" className=\"form-label\">\r\n//                     Username\r\n//                   </label>\r\n//                   <input\r\n//                     id=\"username\"\r\n//                     name=\"username\"\r\n//                     type=\"text\"\r\n//                     className=\"form-control\"\r\n//                     placeholder=\"Enter your username\"\r\n//                     value={formData.username}\r\n//                     onChange={handleChange}\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div className=\"mb-3\">\r\n//                   <label htmlFor=\"role\" className=\"form-label\">\r\n//                     Role\r\n//                   </label>\r\n//                   <select\r\n//                     id=\"role\"\r\n//                     name=\"role\"\r\n//                     className=\"form-control\"\r\n//                     value={formData.role}\r\n//                     onChange={handleChange}\r\n//                     required\r\n//                   >\r\n//                     <option value=\"\">Select Role</option>\r\n//                     <option value=\"Super Admin\">Super Admin</option>\r\n//                     <option value=\"Admin\">Admin</option>\r\n//                     <option value=\"User\">User</option>\r\n//                   </select>\r\n//                 </div>\r\n\r\n//                 <button\r\n//                   type=\"submit\"\r\n//                   className=\"btn btn-primary w-100 mb-3\"\r\n//                   disabled={isLoading}\r\n//                 >\r\n//                   {isLoading ? (\r\n//                     <>\r\n//                       <span\r\n//                         className=\"spinner-border spinner-border-sm me-2\"\r\n//                         role=\"status\"\r\n//                         aria-hidden=\"true\"\r\n//                       ></span>\r\n//                       Logging in...\r\n//                     </>\r\n//                   ) : (\r\n//                     \"Sign in\"\r\n//                   )}\r\n//                 </button>\r\n\r\n//                 <div className=\"text-center mb-3\">\r\n//                   <a href=\"/forgot-password\" className=\"text-decoration-none\">\r\n//                     Forgot password?\r\n//                   </a>\r\n//                 </div>\r\n\r\n//                 <div className=\"text-center\">\r\n//                   <span>Don't have an account? </span>\r\n//                   <a href=\"/signup\" className=\"text-decoration-none\">\r\n//                     Sign up\r\n//                   </a>\r\n//                 </div>\r\n//               </form>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LogPage;\r\n\r\n// // import { useState } from \"react\";\r\n\r\n// // const LogPage = () => {\r\n// //   const [formData, setFormData] = useState({\r\n// //     username: \"\",\r\n// //     role: \"\",\r\n// //   });\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const [isLoading, setIsLoading] = useState(false);\r\n\r\n// //   const handleChange = (e) => {\r\n// //     setFormData({\r\n// //       ...formData,\r\n// //       [e.target.name]: e.target.value,\r\n// //     });\r\n// //   };\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setIsLoading(true);\r\n// //     setError(\"\");\r\n\r\n// //     try {\r\n// //       // Fetch user data to verify credentials\r\n// //       const response = await fetch(\"http://localhost:2323/users\");\r\n// //       if (!response.ok) {\r\n// //         throw new Error(\"Failed to fetch user data\");\r\n// //       }\r\n// //       const users = await response.json();\r\n\r\n// //       // Find user matching both username and role\r\n// //       const user = users.find(\r\n// //         (u) =>\r\n// //           u.name.toLowerCase() === formData.username.toLowerCase() &&\r\n// //           u.role === formData.role\r\n// //       );\r\n\r\n// //       if (user) {\r\n// //         // Store user info in sessionStorage for persistence\r\n// //         sessionStorage.setItem(\r\n// //           \"currentUser\",\r\n// //           JSON.stringify({\r\n// //             id: user.id,\r\n// //             name: user.name,\r\n// //             role: user.role,\r\n// //             email: user.email,\r\n// //           })\r\n// //         );\r\n\r\n// //         // Navigate based on role\r\n// //         switch (user.role) {\r\n// //           case \"Super Admin\":\r\n// //             window.location.href = \"/sadashboard\";\r\n// //             break;\r\n// //           case \"Admin\":\r\n// //             window.location.href = \"/adashboard\";\r\n// //             break;\r\n// //           case \"User\":\r\n// //             window.location.href = \"/udashboard\";\r\n// //             break;\r\n// //           default:\r\n// //             window.location.href = \"/dashboard\";\r\n// //         }\r\n// //       } else {\r\n// //         setError(\"Invalid username or role combination\");\r\n// //       }\r\n// //     } catch (err) {\r\n// //       console.error(\"Login error:\", err);\r\n// //       setError(err.message || \"An error occurred during login\");\r\n// //     } finally {\r\n// //       setIsLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"container\">\r\n// //       <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n// //         <div className=\"col-md-6 col-lg-4\">\r\n// //           <div className=\"card shadow\">\r\n// //             <div className=\"card-body p-4\">\r\n// //               <h2 className=\"text-center mb-4\">Login to DevAgentHub</h2>\r\n\r\n// //               <form onSubmit={handleLogin}>\r\n// //                 {error && (\r\n// //                   <div className=\"alert alert-danger\" role=\"alert\">\r\n// //                     {error}\r\n// //                   </div>\r\n// //                 )}\r\n\r\n// //                 <div className=\"mb-3\">\r\n// //                   <label htmlFor=\"username\" className=\"form-label\">\r\n// //                     Username\r\n// //                   </label>\r\n// //                   <input\r\n// //                     id=\"username\"\r\n// //                     name=\"username\"\r\n// //                     type=\"text\"\r\n// //                     className=\"form-control\"\r\n// //                     placeholder=\"Enter your username\"\r\n// //                     value={formData.username}\r\n// //                     onChange={handleChange}\r\n// //                     required\r\n// //                   />\r\n// //                 </div>\r\n\r\n// //                 <div className=\"mb-3\">\r\n// //                   <label htmlFor=\"role\" className=\"form-label\">\r\n// //                     Role\r\n// //                   </label>\r\n// //                   <select\r\n// //                     id=\"role\"\r\n// //                     name=\"role\"\r\n// //                     className=\"form-control\"\r\n// //                     value={formData.role}\r\n// //                     onChange={handleChange}\r\n// //                     required\r\n// //                   >\r\n// //                     <option value=\"\">Select Role</option>\r\n// //                     <option value=\"Super Admin\">Super Admin</option>\r\n// //                     <option value=\"Admin\">Admin</option>\r\n// //                     <option value=\"User\">User</option>\r\n// //                   </select>\r\n// //                 </div>\r\n\r\n// //                 <button\r\n// //                   type=\"submit\"\r\n// //                   className=\"btn btn-primary w-100 mb-3\"\r\n// //                   disabled={isLoading}\r\n// //                 >\r\n// //                   {isLoading ? (\r\n// //                     <>\r\n// //                       <span\r\n// //                         className=\"spinner-border spinner-border-sm me-2\"\r\n// //                         role=\"status\"\r\n// //                         aria-hidden=\"true\"\r\n// //                       ></span>\r\n// //                       Logging in...\r\n// //                     </>\r\n// //                   ) : (\r\n// //                     \"Sign in\"\r\n// //                   )}\r\n// //                 </button>\r\n\r\n// //                 <div className=\"text-center mb-3\">\r\n// //                   <a href=\"/forgot-password\" className=\"text-decoration-none\">\r\n// //                     Forgot password?\r\n// //                   </a>\r\n// //                 </div>\r\n\r\n// //                 <div className=\"text-center\">\r\n// //                   <span>Don't have an account? </span>\r\n// //                   <a href=\"/signup\" className=\"text-decoration-none\">\r\n// //                     Sign up\r\n// //                   </a>\r\n// //                 </div>\r\n// //               </form>\r\n// //             </div>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default LogPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}