{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const UDashboard = () => {\n//   const [user, setUser] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     mobile: \"\",\n//     email: \"\",\n//     address: \"\",\n//     gender: \"\",\n//     dob: \"\",\n//   });\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   // Get the logged-in user's ID from sessionStorage\n//   const userId = sessionStorage.getItem(\"currentUserId\");\n\n//   // Fetch the logged-in user's profile\n//   const fetchUserProfile = () => {\n//     setLoading(true);\n//     axios\n//       .get(`http://localhost:2323/users/${userId}`)\n//       .then((res) => {\n//         setUser(res.data);\n//         setFormData({\n//           name: res.data.name,\n//           mobile: res.data.mobile,\n//           email: res.data.email,\n//           address: res.data.address || \"\",\n//           gender: res.data.gender,\n//           dob: res.data.dob.split(\"T\")[0], // Format date\n//         });\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   };\n\n//   useEffect(() => {\n//     fetchUserProfile();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   // Submit updated profile\n//   const handleUpdate = (e) => {\n//     e.preventDefault();\n//     if (\n//       !formData.name ||\n//       !formData.mobile ||\n//       !formData.email ||\n//       !formData.gender ||\n//       !formData.dob\n//     ) {\n//       setError(\"Please fill all required fields\");\n//       return;\n//     }\n\n//     axios\n//       .put(`http://localhost:2323/users/${userId}`, formData)\n//       .then(() => {\n//         setIsEditing(false);\n//         fetchUserProfile();\n//         setError(null);\n//       })\n//       .catch((err) => setError(err.message));\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\n\n//   return (\n//     <div className=\"container\">\n//       <h1>User Dashboard</h1>\n\n//       {isEditing ? (\n//         <form onSubmit={handleUpdate}>{/* Form fields */}</form>\n//       ) : (\n//         <div>{/* Display Profile */}</div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const UDashboard = () => {\n//   const [user, setUser] = useState(null); // User details\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     mobile: \"\",\n//     email: \"\",\n//     address: \"\",\n//     gender: \"\",\n//     dob: \"\",\n//   }); // For form inputs\n//   const [isEditing, setIsEditing] = useState(false); // Toggle editing state\n//   const [error, setError] = useState(null); // Error messages\n//   const [loading, setLoading] = useState(true); // Loading state\n\n//   const userId = \"CURRENT_USER_ID\"; // Replace with the logged-in user's ID, fetched from authentication/session\n\n//   // Fetch the logged-in user's profile\n//   const fetchUserProfile = () => {\n//     setLoading(true);\n//     axios\n//       .get(`http://localhost:2323/users/${userId}`)\n//       .then((res) => {\n//         setUser(res.data);\n//         setFormData({\n//           name: res.data.name,\n//           mobile: res.data.mobile,\n//           email: res.data.email,\n//           address: res.data.address || \"\",\n//           gender: res.data.gender,\n//           dob: res.data.dob.split(\"T\")[0], // Format date\n//         });\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   };\n\n//   useEffect(() => {\n//     fetchUserProfile();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   // Submit updated profile\n//   const handleUpdate = (e) => {\n//     e.preventDefault();\n\n//     // Validation\n//     if (\n//       !formData.name ||\n//       !formData.mobile ||\n//       !formData.email ||\n//       !formData.gender ||\n//       !formData.dob\n//     ) {\n//       setError(\"Please fill all required fields\");\n//       return;\n//     }\n\n//     axios\n//       .put(`http://localhost:2323/users/${userId}`, formData)\n//       .then(() => {\n//         setIsEditing(false);\n//         fetchUserProfile(); // Refresh data\n//         setError(null);\n//       })\n//       .catch((err) => setError(err.message));\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\n\n//   return (\n//     <div className=\"container\">\n//       <h1>User Dashboard</h1>\n\n//       {isEditing ? (\n//         // Edit Form\n//         <form onSubmit={handleUpdate}>\n//           <div className=\"mb-3\">\n//             <label>Name</label>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={formData.name}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//               required\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label>Mobile</label>\n//             <input\n//               type=\"tel\"\n//               name=\"mobile\"\n//               value={formData.mobile}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//               required\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label>Email</label>\n//             <input\n//               type=\"email\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//               required\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label>Address</label>\n//             <textarea\n//               name=\"address\"\n//               value={formData.address}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//             ></textarea>\n//           </div>\n//           <div className=\"mb-3\">\n//             <label>Gender</label>\n//             <select\n//               name=\"gender\"\n//               value={formData.gender}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//               required\n//             >\n//               <option value=\"\">Select Gender</option>\n//               <option value=\"Male\">Male</option>\n//               <option value=\"Female\">Female</option>\n//               <option value=\"Other\">Other</option>\n//             </select>\n//           </div>\n//           <div className=\"mb-3\">\n//             <label>Date of Birth</label>\n//             <input\n//               type=\"date\"\n//               name=\"dob\"\n//               value={formData.dob}\n//               onChange={handleChange}\n//               className=\"form-control\"\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary me-2\">\n//             Save\n//           </button>\n//           <button\n//             type=\"button\"\n//             onClick={() => setIsEditing(false)}\n//             className=\"btn btn-secondary\"\n//           >\n//             Cancel\n//           </button>\n//         </form>\n//       ) : (\n//         // Profile Display\n//         <div>\n//           <h2>Profile</h2>\n//           <p>\n//             <strong>Name:</strong> {user.name}\n//           </p>\n//           <p>\n//             <strong>Mobile:</strong> {user.mobile}\n//           </p>\n//           <p>\n//             <strong>Email:</strong> {user.email}\n//           </p>\n//           <p>\n//             <strong>Address:</strong> {user.address || \"N/A\"}\n//           </p>\n//           <p>\n//             <strong>Gender:</strong> {user.gender}\n//           </p>\n//           <p>\n//             <strong>Date of Birth:</strong>{\" \"}\n//             {new Date(user.dob).toLocaleDateString()}\n//           </p>\n//           <button\n//             onClick={() => setIsEditing(true)}\n//             className=\"btn btn-primary\"\n//           >\n//             Edit Profile\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UDashboard;","map":{"version":3,"names":[],"sources":["D:/reactJS/taskShiftWave/fe/src/Pages/UDashoard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const UDashboard = () => {\r\n//   const [user, setUser] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     mobile: \"\",\r\n//     email: \"\",\r\n//     address: \"\",\r\n//     gender: \"\",\r\n//     dob: \"\",\r\n//   });\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // Get the logged-in user's ID from sessionStorage\r\n//   const userId = sessionStorage.getItem(\"currentUserId\");\r\n\r\n//   // Fetch the logged-in user's profile\r\n//   const fetchUserProfile = () => {\r\n//     setLoading(true);\r\n//     axios\r\n//       .get(`http://localhost:2323/users/${userId}`)\r\n//       .then((res) => {\r\n//         setUser(res.data);\r\n//         setFormData({\r\n//           name: res.data.name,\r\n//           mobile: res.data.mobile,\r\n//           email: res.data.email,\r\n//           address: res.data.address || \"\",\r\n//           gender: res.data.gender,\r\n//           dob: res.data.dob.split(\"T\")[0], // Format date\r\n//         });\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((err) => {\r\n//         setError(err.message);\r\n//         setLoading(false);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUserProfile();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   // Submit updated profile\r\n//   const handleUpdate = (e) => {\r\n//     e.preventDefault();\r\n//     if (\r\n//       !formData.name ||\r\n//       !formData.mobile ||\r\n//       !formData.email ||\r\n//       !formData.gender ||\r\n//       !formData.dob\r\n//     ) {\r\n//       setError(\"Please fill all required fields\");\r\n//       return;\r\n//     }\r\n\r\n//     axios\r\n//       .put(`http://localhost:2323/users/${userId}`, formData)\r\n//       .then(() => {\r\n//         setIsEditing(false);\r\n//         fetchUserProfile();\r\n//         setError(null);\r\n//       })\r\n//       .catch((err) => setError(err.message));\r\n//   };\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>User Dashboard</h1>\r\n\r\n//       {isEditing ? (\r\n//         <form onSubmit={handleUpdate}>{/* Form fields */}</form>\r\n//       ) : (\r\n//         <div>{/* Display Profile */}</div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UDashboard;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const UDashboard = () => {\r\n//   const [user, setUser] = useState(null); // User details\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     mobile: \"\",\r\n//     email: \"\",\r\n//     address: \"\",\r\n//     gender: \"\",\r\n//     dob: \"\",\r\n//   }); // For form inputs\r\n//   const [isEditing, setIsEditing] = useState(false); // Toggle editing state\r\n//   const [error, setError] = useState(null); // Error messages\r\n//   const [loading, setLoading] = useState(true); // Loading state\r\n\r\n//   const userId = \"CURRENT_USER_ID\"; // Replace with the logged-in user's ID, fetched from authentication/session\r\n\r\n//   // Fetch the logged-in user's profile\r\n//   const fetchUserProfile = () => {\r\n//     setLoading(true);\r\n//     axios\r\n//       .get(`http://localhost:2323/users/${userId}`)\r\n//       .then((res) => {\r\n//         setUser(res.data);\r\n//         setFormData({\r\n//           name: res.data.name,\r\n//           mobile: res.data.mobile,\r\n//           email: res.data.email,\r\n//           address: res.data.address || \"\",\r\n//           gender: res.data.gender,\r\n//           dob: res.data.dob.split(\"T\")[0], // Format date\r\n//         });\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((err) => {\r\n//         setError(err.message);\r\n//         setLoading(false);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUserProfile();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   // Submit updated profile\r\n//   const handleUpdate = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Validation\r\n//     if (\r\n//       !formData.name ||\r\n//       !formData.mobile ||\r\n//       !formData.email ||\r\n//       !formData.gender ||\r\n//       !formData.dob\r\n//     ) {\r\n//       setError(\"Please fill all required fields\");\r\n//       return;\r\n//     }\r\n\r\n//     axios\r\n//       .put(`http://localhost:2323/users/${userId}`, formData)\r\n//       .then(() => {\r\n//         setIsEditing(false);\r\n//         fetchUserProfile(); // Refresh data\r\n//         setError(null);\r\n//       })\r\n//       .catch((err) => setError(err.message));\r\n//   };\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div className=\"alert alert-danger\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>User Dashboard</h1>\r\n\r\n//       {isEditing ? (\r\n//         // Edit Form\r\n//         <form onSubmit={handleUpdate}>\r\n//           <div className=\"mb-3\">\r\n//             <label>Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               value={formData.name}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label>Mobile</label>\r\n//             <input\r\n//               type=\"tel\"\r\n//               name=\"mobile\"\r\n//               value={formData.mobile}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label>Email</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               value={formData.email}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label>Address</label>\r\n//             <textarea\r\n//               name=\"address\"\r\n//               value={formData.address}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//             ></textarea>\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label>Gender</label>\r\n//             <select\r\n//               name=\"gender\"\r\n//               value={formData.gender}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//               required\r\n//             >\r\n//               <option value=\"\">Select Gender</option>\r\n//               <option value=\"Male\">Male</option>\r\n//               <option value=\"Female\">Female</option>\r\n//               <option value=\"Other\">Other</option>\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label>Date of Birth</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               name=\"dob\"\r\n//               value={formData.dob}\r\n//               onChange={handleChange}\r\n//               className=\"form-control\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" className=\"btn btn-primary me-2\">\r\n//             Save\r\n//           </button>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => setIsEditing(false)}\r\n//             className=\"btn btn-secondary\"\r\n//           >\r\n//             Cancel\r\n//           </button>\r\n//         </form>\r\n//       ) : (\r\n//         // Profile Display\r\n//         <div>\r\n//           <h2>Profile</h2>\r\n//           <p>\r\n//             <strong>Name:</strong> {user.name}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Mobile:</strong> {user.mobile}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Email:</strong> {user.email}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Address:</strong> {user.address || \"N/A\"}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Gender:</strong> {user.gender}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Date of Birth:</strong>{\" \"}\r\n//             {new Date(user.dob).toLocaleDateString()}\r\n//           </p>\r\n//           <button\r\n//             onClick={() => setIsEditing(true)}\r\n//             className=\"btn btn-primary\"\r\n//           >\r\n//             Edit Profile\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UDashboard;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}